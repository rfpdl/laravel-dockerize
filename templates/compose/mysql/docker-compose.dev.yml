version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: ./docker/common/php-fpm/Dockerfile
      target: development
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - XDEBUG_ENABLED=${XDEBUG_ENABLED:-false}
    restart: unless-stopped
    volumes:
      - .:/var/www
    environment:
      - APP_ENV=development
      - DB_CONNECTION=mysql
      - DB_HOST=maindb
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE:-app_dev}
      - DB_USERNAME=${DB_USERNAME:-app}
      - DB_PASSWORD=${DB_PASSWORD:-secret}
      - LOG_DB_CONNECTION=mysql
      - LOG_DB_HOST=logdb
      - LOG_DB_PORT=3306
      - LOG_DB_DATABASE=${LOG_DB_DATABASE:-app_logs_dev}
      - LOG_DB_USERNAME=${LOG_DB_USERNAME:-app}
      - LOG_DB_PASSWORD=${LOG_DB_PASSWORD:-secret}
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "php-fpm-healthcheck || exit 1"]
      interval: 10s
    depends_on:
      maindb:
        condition: service_healthy
      logdb:
        condition: service_healthy
      redis:
        condition: service_healthy

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    volumes:
      - .:/var/www
      - ./docker/development/nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app-network
    ports:
      - "${NGINX_PORT:-80}:80"
    depends_on:
      app:
        condition: service_healthy

  maindb:
    image: mysql:8
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_DATABASE=${DB_DATABASE:-app_dev}
      - MYSQL_USER=${DB_USERNAME:-app}
      - MYSQL_PASSWORD=${DB_PASSWORD:-secret}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-rootsecret}
    volumes:
      - maindb-dev-data:/var/lib/mysql
    networks:
      - app-network
    ports:
      - "${MYSQL_MAIN_PORT:-3306}:3306"
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p$${MYSQL_ROOT_PASSWORD} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  logdb:
    image: mysql:8
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_DATABASE=${LOG_DB_DATABASE:-app_logs_dev}
      - MYSQL_USER=${LOG_DB_USERNAME:-app}
      - MYSQL_PASSWORD=${LOG_DB_PASSWORD:-secret}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-rootsecret}
    volumes:
      - logdb-dev-data:/var/lib/mysql
    networks:
      - app-network
    ports:
      - "${MYSQL_LOG_PORT:-3307}:3306"
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p$${MYSQL_ROOT_PASSWORD} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-dev-data:/data
    networks:
      - app-network
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s

  horizon:
    build:
      context: .
      dockerfile: ./docker/common/php-fpm/Dockerfile
    restart: unless-stopped
    volumes:
      - .:/var/www
    environment:
      - APP_ENV=development
      - DB_CONNECTION=mysql
      - DB_HOST=maindb
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE:-app_dev}
      - DB_USERNAME=${DB_USERNAME:-app}
      - DB_PASSWORD=${DB_PASSWORD:-secret}
      - LOG_DB_CONNECTION=mysql
      - LOG_DB_HOST=logdb
      - LOG_DB_PORT=3306
      - LOG_DB_DATABASE=${LOG_DB_DATABASE:-app_logs_dev}
      - LOG_DB_USERNAME=${LOG_DB_USERNAME:-app}
      - LOG_DB_PASSWORD=${LOG_DB_PASSWORD:-secret}
    command: ["watch-horizon.sh"]
    networks:
      - app-network
    depends_on:
      maindb:
        condition: service_healthy
      logdb:
        condition: service_healthy
      redis:
        condition: service_healthy

networks:
  app-network:
    driver: bridge

volumes:
  maindb-dev-data:
  logdb-dev-data:
  redis-dev-data:
